{"version":3,"sources":["simple_test.js"],"names":["trimAll","string","replace","t","is","String","undefined","Symbol","forEach","type","throws"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,WAAOA,OAAOC,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAAP;AACH;;AAED,mBAAK,iBAAL,EAAwBC,KAAK;AACzBA,MAAEC,EAAF,CAAKJ,QAAQ,+DAAR,CAAL,EAA+E,SAA/E;;AAEAG,MAAEC,EAAF,CAAKJ,QAAQ,SAAR,CAAL,EAAyB,SAAzB;;AAEAG,MAAEC,EAAF,CAAKJ,QAAQ,IAAIK,MAAJ,CAAW,SAAX,CAAR,CAAL,EAAqC,KAArC;;AAEA,KAACC,SAAD,EAAY,IAAZ,EAAkB,CAAlB,EAAqB,IAArB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,MAAM,CAAE,CAA3C,EAA6CC,QAA7C,EAAuDC,OAAvD,CAA+DC,QAAQ;AACnEN,UAAEO,MAAF,+GAAS,MAAM;AACXV,oBAAQS,IAAR;AACH,SAFD;AAGH,KAJD;AAKH,CAZD","file":"simple_test.js","sourcesContent":["import test from 'ava';\n\nfunction trimAll(string) {\n    return string.replace(/[\\s\\b]/g, '');\n}\n\ntest('trimAll testing', t => {\n    t.is(trimAll(' \\n \\r \\t \\v \\b \\f B a r r  i  o  r  \\n  \\r  \\t  \\v  \\b  \\f  '), 'Barrior');\n\n    t.is(trimAll('Barrior'), 'Barrior');\n\n    t.is(trimAll(new String(' T o m ')), 'Tom');\n\n    [undefined, null, 0, true, [], {}, () => {}, Symbol()].forEach(type => {\n        t.throws(() => {\n            trimAll(type);\n        });\n    });\n});\n"]}